version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: dmarc_elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx2g
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - cluster.routing.allocation.disk.threshold_enabled=false
      - action.destructive_requires_name=false
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=30s || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - dmarc-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: dmarc_kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - KIBANA_SYSTEM_PASSWORD=${KIBANA_PASSWORD:-kibana123}
      - SERVER_NAME=dmarc-kibana
      - SERVER_HOST=0.0.0.0
    ports:
      - "5601:5601"
    volumes:
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - kibana_data:/usr/share/kibana/data
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - dmarc-network

  parsedmarc:
    image: patschi/parsedmarc:latest
    container_name: dmarc_parsedmarc
    volumes:
      - ./config/parsedmarc.ini:/etc/parsedmarc/config.ini:ro
      - parsedmarc_logs:/var/log/parsedmarc
      - parsedmarc_output:/opt/parsedmarc/output
    command: ["-c", "/etc/parsedmarc/config.ini", "--continuous", "--verbose"]
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - TZ=UTC
      - PYTHONUNBUFFERED=1
    networks:
      - dmarc-network
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep parsedmarc | grep -v grep || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s

  redis:
    image: redis:7.2-alpine
    container_name: dmarc_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - dmarc-network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: dmarc_api
    ports:
      - "5001:5000"
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - FLASK_ENV=development
      - FLASK_SECRET_KEY=development-secret-key-change-in-production
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost,http://localhost:80,http://localhost:3000
      - EVENTLET_NO_GREENDNS=yes
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - dmarc-network

  nginx:
    image: nginx:1.25-alpine
    container_name: dmarc_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - elasticsearch
      - kibana
    restart: unless-stopped
    networks:
      - dmarc-network

volumes:
  esdata:
    driver: local
  kibana_data:
    driver: local
  parsedmarc_logs:
    driver: local
  parsedmarc_output:
    driver: local
  redis_data:
    driver: local

networks:
  dmarc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
